{
	"info": {
		"_postman_id": "9d45a996-5de1-4b79-acd0-632f0e3dabec",
		"name": "Taller Nest - Final",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "44330204",
		"_collection_link": "https://thomasbrueck.postman.co/workspace/Thomas-Brueck's-Workspace~dee87767-b11d-4023-8efe-41705b360b59/collection/44330204-9d45a996-5de1-4b79-acd0-632f0e3dabec?action=share&source=collection_link&creator=44330204"
	},
	"item": [
		{
			"name": "Seed",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/seed",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"seed"
					]
				}
			},
			"response": []
		},
		{
			"name": "Register",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let response = pm.response.json();",
							"",
							"if (response.id) {",
							"    pm.environment.set(\"user_id\", response.id);",
							"    console.log(\"Id guardado en user_id\");",
							"} else {",
							"    console.log(\"No se encontró el id en la respuesta\");",
							"}",
							""
						],
						"type": "text/javascript",
						"packages": {},
						"requests": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"Parra\",\n    \"email\": \"parra@gmail.com\",\n    \"password\": \"Qwerty123\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/auth/register",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"auth",
						"register"
					]
				}
			},
			"response": []
		},
		{
			"name": "Register Alternative user",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"Alternative\",\n    \"email\": \"alternative@gmail.com\",\n    \"password\": \"alternative\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/auth/register",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"auth",
						"register"
					]
				}
			},
			"response": []
		},
		{
			"name": "Login Admin Role",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let response = pm.response.json();\r",
							"\r",
							"if (response.token) {\r",
							"    pm.environment.set(\"admin_token\", response.token);\r",
							"    console.log(\"Token guardado en admin_token\");\r",
							"} else {\r",
							"    console.log(\"No se encontró el token en la respuesta\");\r",
							"}\r",
							""
						],
						"type": "text/javascript",
						"packages": {},
						"requests": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"email\":\"admin@example.com\",\n    \"password\": \"admin123\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/auth/login",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"auth",
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "Test de Roles",
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{admin_token}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{base_url}}/auth/private",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"auth",
						"private"
					]
				}
			},
			"response": []
		},
		{
			"name": "Login User Role",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let response = pm.response.json();\r",
							"\r",
							"if (response.token) {\r",
							"    pm.environment.set(\"user_token\", response.token);\r",
							"    console.log(\"Token guardado en user_token\");\r",
							"} else {\r",
							"    console.log(\"No se encontró el token en la respuesta\");\r",
							"}\r",
							""
						],
						"type": "text/javascript",
						"packages": {},
						"requests": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"email\":\"bob@example.com\",\n    \"password\": \"bob123\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/auth/login",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"auth",
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "Login Alternative User",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let response = pm.response.json();\r",
							"\r",
							"if (response.token) {\r",
							"    pm.environment.set(\"alt_token\", response.token);\r",
							"    console.log(\"Token guardado en alt_token\");\r",
							"} else {\r",
							"    console.log(\"No se encontró el token en la respuesta\");\r",
							"}\r",
							""
						],
						"type": "text/javascript",
						"packages": {},
						"requests": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"email\":\"alternative@gmail.com\",\n    \"password\": \"alternative\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/auth/login",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"auth",
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get All Users",
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{admin_token}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{base_url}}/users?limit=6&offset=1",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"users"
					],
					"query": [
						{
							"key": "limit",
							"value": "6"
						},
						{
							"key": "offset",
							"value": "1"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get User By Email",
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{admin_token}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{base_url}}/users/alice@example.com",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"users",
						"alice@example.com"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update User",
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "PATCH",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{admin_token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\":\"Otro update\",\n    \"email\":\"UPDATE@example.com\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/users/{{user_id}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"users",
						"{{user_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update User by Alternative User",
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "PATCH",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{alt_token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\":\"Alice Update 2\",\n    \"email\":\"alice2@example.com\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/users/0517362f-0dbb-4e91-b53f-18da63ac862a",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"users",
						"0517362f-0dbb-4e91-b53f-18da63ac862a"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get UserProfile",
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{admin_token}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{base_url}}/users/profile",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"users",
						"profile"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Movie",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let response = pm.response.json();\r",
							"\r",
							"if (response.id) {\r",
							"    pm.environment.set(\"movie_id\", response.id);\r",
							"    console.log(\"Id guardado en movie_id\");\r",
							"} else {\r",
							"    console.log(\"No se encontró el id en la respuesta\");\r",
							"}"
						],
						"type": "text/javascript",
						"packages": {},
						"requests": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{admin_token}}",
						"type": "text"
					},
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"title\": \"Inception 2\",\r\n  \"description\": \"Dream within a dream\",\r\n  \"director\": \"Christopher Nolan\",\r\n  \"releaseDate\": \"2010-07-16\",\r\n  \"genre\": \"drama\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/movies",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"movies"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get all movies",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/movies",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"movies"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get movie by ID",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"title\": \"Inception\",\r\n  \"description\": \"Dream within a dream\",\r\n  \"director\": \"Christopher Nolan\",\r\n  \"releaseDate\": \"2010-07-16\",\r\n  \"genre\": \"drama\"\r\n}"
				},
				"url": {
					"raw": "{{base_url}}/movies/{{movie_id}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"movies",
						"{{movie_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Edit Movie",
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "PATCH",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{admin_token}}",
						"type": "text"
					},
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"description\": \"Updated description\",\r\n  \"releaseDate\": \"2011-01-01\",\r\n  \"genre\": \"thriller\"\r\n}"
				},
				"url": {
					"raw": "{{base_url}}/movies/{{movie_id}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"movies",
						"{{movie_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Edit Movie by Alternative User",
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "PATCH",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{alt_token}}",
						"type": "text"
					},
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"description\": \"Updated description\",\r\n  \"releaseDate\": \"2011-01-01\",\r\n  \"genre\": \"thriller\"\r\n}"
				},
				"url": {
					"raw": "{{base_url}}/movies/{{movie_id}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"movies",
						"{{movie_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Review",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let response = pm.response.json();",
							"",
							"if (response.id) {",
							"    pm.environment.set(\"review_id\", response.id);",
							"    console.log(\"Id guardado en review_id\");",
							"} else {",
							"    console.log(\"No se encontró el id en la respuesta\");",
							"}",
							""
						],
						"type": "text/javascript",
						"packages": {},
						"requests": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{user_token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"Mi review\",\n    \"rating\": 4,\n    \"comment\": \"No me llamo la atencion, el final estuvo muy malo\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/reviews/movie/{{movie_id}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"reviews",
						"movie",
						"{{movie_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get All Reviews",
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/reviews",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"reviews"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Movie Reviews",
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/reviews/movie/{{movie_id}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"reviews",
						"movie",
						"{{movie_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get User Reviews",
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/reviews/user/5a58c971-aba4-4f6f-9941-be38abbfca0d",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"reviews",
						"user",
						"5a58c971-aba4-4f6f-9941-be38abbfca0d"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Review",
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/reviews/{{review_id}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"reviews",
						"{{review_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update Review",
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "PATCH",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{user_token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"Nuevo nombre para mi review\",\n    \"rating\": 1\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/reviews/{{review_id}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"reviews",
						"{{review_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update Review by Alternative User",
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "PATCH",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{alt_token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"Nuevo nombre para mi review\",\n    \"rating\": 1\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/reviews/{{review_id}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"reviews",
						"{{review_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete Review by Alternative User",
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "DELETE",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{alt_token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{base_url}}/reviews/{{review_id}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"reviews",
						"{{review_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete Review",
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "DELETE",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{user_token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{base_url}}/reviews/{{review_id}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"reviews",
						"{{review_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete Movie",
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "DELETE",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{admin_token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"description\": \"Updated description\",\r\n  \"releaseDate\": \"2011-01-01\",\r\n  \"genre\": \"thriller\"\r\n}"
				},
				"url": {
					"raw": "{{base_url}}/movies/{{movie_id}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"movies",
						"{{movie_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete Movie by Alternative User",
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "DELETE",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{alt_token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"description\": \"Updated description\",\r\n  \"releaseDate\": \"2011-01-01\",\r\n  \"genre\": \"thriller\"\r\n}"
				},
				"url": {
					"raw": "{{base_url}}/movies/{{movie_id}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"movies",
						"{{movie_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Change Role User to Admin",
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "PATCH",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{admin_token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"roles\": [\"admin\"]\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/users/{{user_id}}/roles",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"users",
						"{{user_id}}",
						"roles"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete User",
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "DELETE",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{admin_token}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{base_url}}/users/{{user_id}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"users",
						"{{user_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete User by Alternative",
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "DELETE",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{alt_token}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{base_url}}/users/{{user_id}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"users",
						"{{user_id}}"
					]
				}
			},
			"response": []
		}
	]
}